syntax = "proto3";
import "google/api/annotations.proto";

package wasmflow;

service InvocationService {
  rpc Invoke(Invocation) returns (stream Output);
  rpc List(ListRequest) returns (ListResponse);
  rpc Stats(StatsRequest) returns (StatsResponse) {
    option (google.api.http) = {
      get: "/metrics"
    };
  };
  
}

message Packet {
  oneof data {
    Serialized success = 1;
    Failure failure = 2;
    Signal signal = 3;
  }
}

message Serialized {
  PayloadData payload = 1;
}

message Failure {
  enum FailureKind {
    Error = 0;
    Exception = 1;
  }
  string payload = 1;
  FailureKind type = 2;
}

message Signal {
  enum OutputSignal {
    Done = 0;
    OpenBracket = 1;
    CloseBracket = 2;
  }
  PayloadData payload = 1;
  OutputSignal type = 2;
}

message PayloadData {
  oneof data {
    bytes messagepack = 1;
    string json = 3;
  }
}

message Invocation {
  string origin = 1;
  string target = 2;
  map<string, Packet> payload = 3;
  string id = 4;
  string tx_id = 5;
  InherentData inherent = 6;
  Serialized config = 7;
}

message InherentData {
  uint64 seed = 1;
  uint64 timestamp = 2;
}

message Output {
  string port = 1;
  string invocation_id = 2;
  Packet payload = 3;
}

message ListRequest {}
message ListResponse { repeated HostedType schemas = 1; }

message HostedType {
  oneof type { CollectionSignature collection = 1; }
}

message Component {
  enum ComponentKind {
    Component = 0;
    Schematic = 1;
  }
  string name = 1;
  ComponentKind kind = 2;
  map<string, TypeSignature> inputs = 3;
  map<string, TypeSignature> outputs = 4;
}

message CollectionSignature {
  string name = 1;
  CollectionFeatures features = 8;
  string version = 2;
  uint32 format = 6;
  map<string, Component> components = 3;
  map<string, TypeDefinition> types = 4;
  map<string, TypeDefinition> config = 5;
  repeated WellKnownSchema wellknown = 7;
}

message CollectionFeatures {
  bool streaming = 1;
  bool stateful = 2;
  uint32 version = 3;
}

message TypeDefinition {
  oneof type {
    StructSignature struct = 1;
    EnumSignature enum = 2;
  }
}

message WellKnownSchema {
  repeated string capabilities = 1;
  string url = 2;
  CollectionSignature schema = 3;
}

message StatsRequest {}
message StatsResponse { repeated Statistic stats = 1; }

message Statistic {
  string name = 1;
  uint32 runs = 2;
  uint32 errors = 3;
  DurationStatistics execution_statistics = 4;
}

message DurationStatistics {
  uint64 min = 1;
  uint64 max = 2;
  uint64 average = 3;
  uint64 total = 4;
}

message StructSignature {
  string name = 1;
  map<string, TypeSignature> fields = 2;
}

message EnumSignature {
  string name = 1;
  repeated EnumVariant values = 2;
}

message EnumVariant {
  string name = 1;
  uint32 index = 2;
}

message TypeSignature {
  oneof signature {
    SimpleType simple = 1;
    MapType map = 2;
    ListType list = 3;
    OptionalType optional = 4;
    RefType ref = 5;
    LinkType link = 6;
    InternalType internal = 7;
    StructType struct = 8;
  }
}

message SimpleType {
  enum ApexType {
    I8 = 0;
    U8 = 1;
    I16 = 2;
    U16 = 3;
    I32 = 4;
    U32 = 5;
    I64 = 6;
    U64 = 7;
    F32 = 8;
    F64 = 9;
    BOOL = 10;
    STRING = 11;
    DATETIME = 12;
    BYTES = 13;
    VALUE = 15;
  }
  ApexType type = 1;
}

enum InternalType { ComponentInput = 0; }

message RefType { string ref = 1; }

message StructType {}

message LinkType { repeated string schemas = 1; }

message MapType {
  TypeSignature keyType = 1;
  TypeSignature valueType = 2;
}

message ListType { TypeSignature type = 1; }

message OptionalType { TypeSignature type = 1; }